import"./echarts-a7d4e912.js";import{g as w,i as z,u as E}from"./index-9ea8cffe.js";import{d as f,o as h,a as g,c as x,u as v,K as B,I as p,V as y,F as k,T as d}from"./vue-fd42cc31.js";import{_ as H}from"./how-to-use-table.vue_vue_type_script_setup_true_lang-db6d4484.js";import{H as T}from"./index-5d32484c.js";import"./elementPlus-1b4bb05b.js";import"./elementIcons-b7f5cfb3.js";const I=s=>JSON.parse(JSON.stringify(s)),O=["id"],V=f({__name:"index",props:{data:{type:Array,required:!0},xAxisName:{type:String,default:""},yAxisName:{type:String,default:""},reverse:{type:Boolean,default:!1},zoomable:{type:Boolean,default:!1},colorList:{type:Array},textColor:{type:String,default:"#000"},labelColor:{type:String,default:"#fff"},width:{type:String,default:"400px"},height:{type:String,default:"400px"}},setup(s){const r=w();let l;const e=s;let i=[],n=[],m=[];const u=[],_=()=>{l=z(r),N(),E(l)},N=()=>{b(),S(),L(),l.setOption({tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{type:"scroll"},xAxis:{type:e.reverse?"value":"category",data:e.reverse?[]:i,name:e.xAxisName,nameTextStyle:{color:e.textColor},nameGap:5,axisLine:{show:!0,lineStyle:{color:e.textColor}},z:e.reverse?0:3},grid:{left:"3%",bottom:"3%",containLabel:!0},dataZoom:e.zoomable?[{type:"inside"}]:[],yAxis:{type:e.reverse?"category":"value",data:e.reverse?i:[],name:e.yAxisName,nameTextStyle:{color:e.textColor},axisLine:{show:!0,lineStyle:{color:e.textColor}},axisLabel:{margin:2},z:e.reverse?3:0},series:u})},b=()=>{i=[],n=[],e.data.forEach(a=>{i.push(a.name),a.data.forEach(t=>{n.includes(t.name)||n.push(t.name)})})},S=()=>{m=I(e.data),m.forEach(a=>{const t=[];a.data.forEach(o=>{t.push(o.name)}),n.forEach(o=>{t.includes(o)||a.data.push({name:o,value:0})})})},L=()=>{n.forEach((a,t)=>{u.push({name:a,type:"bar",stack:"total",color:e.colorList?e.colorList[t]:"",label:{show:!0,position:["40%","40%"],color:e.labelColor,fontSize:12},emphasis:{focus:"series"},data:(()=>{const o=[];return m.forEach(A=>{const c=A.data.find(C=>C.name===a);o.push(c?c.value:0)}),o})()})})};return h(()=>{_()}),(a,t)=>(g(),x("div",{id:v(r),style:B({width:e.width,height:e.height})},null,12,O))}}),J={class:"flex justify-around items-center"},$=p("pre",null,[d("        "),p("h1",{class:"mb-[-30px]"},"示例代码"),d("\n        "),p("code",{class:"language-html text-sm"},"\n        <stack-chart\n            zoomable\n            :data=\"[  { \n                        name: '测试1',\n                        data: [   \n                                { name: 'type1', value: 320 },\n                                { name: 'type2', value: 200 },\n                                { name: 'type3', value: 250 }\n                              ]\n                      },\n                      { \n                        name: '测试2',\n                        data: [   \n                                { name: 'type1', value: 302 },\n                                { name: 'type2', value: 302 },\n                                { name: 'type3', value: 200 }\n                              ]\n                      },\n                      { \n                        name: '测试3',\n                        data: [\n                          { name: 'type1', value: 301 },\n                          { name: 'type2', value: 100 },\n                          { name: 'type3', value: 301 }\n                        ]\n                      }\n                  ]\"\n            />\n        "),d("\n      ")],-1),M=f({__name:"stack-show",setup(s){h(()=>{T.highlightAll()});const r=[{propName:"data(必填)",mean:"展示的值",type:"Array<{name:string,data:{name:string;value:number}[]}>",default:"-"},{propName:"xAxisName",mean:"x轴的名字",type:"string",default:"-"},{propName:"yAxisName",mean:"y轴的名字",type:"string",default:"-"},{propName:"reverse",mean:"x轴和y轴是否反转",type:"boolean",default:"false"},{propName:"zoomable",mean:"是否允许滚动缩放",type:"boolean",default:"false"},{propName:"color-list",mean:"柱子颜色，未设置则随机显示",type:"string[]",default:"-"},{propName:"labelColor",mean:"柱子中值的字体颜色",type:"string",default:"#fff"},{propName:"width",mean:"整个图标的宽度",type:"string",default:"400px"},{propName:"height",mean:"整个图标的高度",type:"string",default:"400px"}];return(l,e)=>(g(),x(k,null,[p("div",J,[y(v(V),{zoomable:"",data:[{name:"测试1",data:[{name:"type1",value:320},{name:"type2",value:200},{name:"type3",value:250}]},{name:"测试2",data:[{name:"type1",value:302},{name:"type2",value:302},{name:"type3",value:200}]},{name:"测试3",data:[{name:"type1",value:301},{name:"type2",value:100},{name:"type3",value:301}]}]}),$]),y(H,{"how-to-use":r})],64))}});export{M as default};
